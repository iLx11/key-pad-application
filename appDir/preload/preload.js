"use strict";const{contextBridge:a,ipcRenderer:n,dialog:k}=require("electron"),i=e=>{n.send("store-set",e)},c=async()=>await n.invoke("select-file"),r=async()=>await n.invoke("wait-sign"),d=async()=>await n.invoke("connection-state"),w=async e=>await n.invoke("send-data",e),l=(e,t)=>{n.send("window-create",e,t)},m=()=>{n.send("window-min")},g=()=>{n.send("window-max")},u=()=>{n.send("window-close")},v=async(e,t,o,s)=>await n.invoke("pic-data-editor",e,t,o,s),y=async(e,t=120,...o)=>n.invoke("pic-data-parse",e,t,...o);a.exposeInMainWorld("myApi",{minimizeWindow:m,maximizeWindow:g,closeWindow:u,createNewWindow:l,setConfigStore:i,getFilePath:c,waitSign:r,connectHardware:d,sendData:w,resizeImage:v,generateResultArray:y,storeChangeListen:e=>n.on("store-get",(t,o)=>{e(o)})});window.addEventListener("DOMContentLoaded",()=>{const e=(t,o)=>{const s=document.getElementById(t);s&&(s.innerText=o)};for(const t of["chrome","node","electron"])e(`${t}-version`,process.versions[t])});
